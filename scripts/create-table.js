const { createClient } = require('@supabase/supabase-js');
require('dotenv').config();

const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL;
const supabaseServiceKey = process.env.SUPABASE_SERVICE_KEY;

const supabase = createClient(supabaseUrl, supabaseServiceKey);

async function createTable() {
  try {
    console.log('Creating products table...');

    const { data, error } = await supabase.rpc('exec_sql', {
      sql: `
        -- Create products table
        create table if not exists public.products (
          id bigint generated by default as identity primary key,
          name text not null,
          description text,
          price decimal(10,2) not null,
          created_at timestamp with time zone default timezone('utc'::text, now()) not null,
          updated_at timestamp with time zone default timezone('utc'::text, now()) not null
        );

        -- Enable RLS
        alter table public.products enable row level security;

        -- Create policy for public read access
        drop policy if exists "Products are viewable by everyone" on public.products;
        create policy "Products are viewable by everyone" on public.products
          for select using (true);

        -- Create policy for authenticated users to insert/update/delete
        drop policy if exists "Authenticated users can manage products" on public.products;
        create policy "Authenticated users can manage products" on public.products
          for all using (auth.role() = 'authenticated');
      `
    });

    if (error) {
      console.error('Error creating table:', error);
      return;
    }

    console.log('Successfully created products table');
  } catch (error) {
    console.error('Unexpected error:', error);
  }
}

createTable();